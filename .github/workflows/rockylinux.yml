name: axonmq rockylinux

on:
  workflow_call:
    inputs:
      upload_url:
        required: true
        type: string
      tag_name:
        required: true
        type: string
      branch_name:
        required: false
        type: string
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    strategy:
      matrix:
        version: [8, 9]
    container: ghcr.io/letoille/axonmq/rockylinux-${{ matrix.version }}:${{ inputs.branch_name || github.ref_name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - run: rustup default stable
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "linux-rockylinux-${{ matrix.version }}"
        shared-key: ""
        key: ""
        env-vars: ""
        workspaces: ""
        cache-directories: ""
        cache-targets: ""
        cache-on-failure: "true"
        cache-all-crates: ""
        save-if: ${{ github.ref == 'refs/heads/main' }}
        cache-provider: "buildjet"

    - name: Build
      run: cargo build --release

    - name: Generate RPM package
      run: cargo generate-rpm

    - name: rename
      if: github.event_name != 'workflow_dispatch'
      run: |
        mv ./target/generate-rpm/axonmq-${{ inputs.tag_name }}-1.x86_64.rpm ./target/generate-rpm/axonmq-rockylinux-${{ matrix.version }}-${{ inputs.tag_name }}-1.x86_64.rpm
    - name: Upload Release Asset
      if: github.event_name != 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./target/generate-rpm/axonmq-rockylinux-${{ matrix.version }}-${{ inputs.tag_name }}-1.x86_64.rpm

    - name: Upload RPM artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: rockylinux-${{ matrix.version }}-axonmq
        path: ./target/generate-rpm/axonmq-*.rpm