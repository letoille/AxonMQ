name: axonmq macos

on: workflow_dispatch

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - run: rustup default stable
    - run: rustup target add aarch64-apple-darwin
    - name: Install protoc
      run: |
        brew install protobuf
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: ""
        shared-key: ""
        key: ""
        env-vars: ""
        workspaces: ""
        cache-directories: ""
        cache-targets: ""
        cache-on-failure: "true"
        cache-all-crates: ""
        save-if: ${{ github.ref == 'refs/heads/main' }}
        cache-provider: "buildjet"

    - name: Build
      run: |
        cargo build --release --target aarch64-apple-darwin
        ls target/aarch64-apple-darwin/release

    - name: Create and Upload macOS Package
      run: |
        PACKAGE_DIR="axonmq-macos-${{ inputs.tag_name }}"
        mkdir $PACKAGE_DIR
        cp target/aarch64-apple-darwin/release/axonmq $PACKAGE_DIR/
        cp config.toml $PACKAGE_DIR/
        mkdir $PACKAGE_DIR/certs
        cp certs/server.crt $PACKAGE_DIR/certs/
        cp certs/server.key $PACKAGE_DIR/certs/
        cp LICENSE $PACKAGE_DIR/
        zip -r $PACKAGE_DIR.zip $PACKAGE_DIR
        echo "ASSET_NAME=${PACKAGE_DIR}.zip" >> $GITHUB_ENV
        echo "ASSET_PATH=${PACKAGE_DIR}.zip" >> $GITHUB_ENV
      shell: bash

    - name: Upload Artifact (Manual Trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: axonmq-macos-${{ inputs.tag_name }}
        path: ${{ env.ASSET_PATH }}

    - name: Upload Release Asset
      if: github.event_name != 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.ASSET_PATH }}

    