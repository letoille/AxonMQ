name: axonmq windows

on:
  workflow_call:
    inputs:
      upload_url:
        required: true
        type: string
      tag_name:
        required: true
        type: string
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - run: rustup default stable
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "windows"
        shared-key: ""
        key: ""
        env-vars: ""
        workspaces: ""
        cache-directories: ""
        cache-targets: ""
        cache-on-failure: "true"
        cache-all-crates: ""
        save-if: ${{ github.ref == 'refs/heads/main' }}
        cache-provider: "buildjet"

    - name: Build
      run: cargo build --release

    - name: Create and Upload Windows Package
      run: |
        $PACKAGE_DIR="axonmq-windows-${{ inputs.tag_name }}"
        mkdir $PACKAGE_DIR
        cp target/release/axonmq.exe $PACKAGE_DIR/
        cp config.toml $PACKAGE_DIR/
        mkdir $PACKAGE_DIR/certs
        cp certs/server.crt $PACKAGE_DIR/certs/
        cp certs/server.key $PACKAGE_DIR/certs/
        cp LICENSE $PACKAGE_DIR/
        Compress-Archive -Path $PACKAGE_DIR -DestinationPath "$PACKAGE_DIR.zip"
        echo "ASSET_NAME=$PACKAGE_DIR.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "ASSET_PATH=$PACKAGE_DIR.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh

    - name: Upload Artifact (Manual Trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: axonmq-windows-${{ inputs.tag_name }}
        path: ${{ env.ASSET_PATH }}

    - name: Upload Release Asset
      if: github.event_name != 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.ASSET_PATH }}

    