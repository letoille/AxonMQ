[package]
name = "axonmq"
version = "0.1.0"
edition = "2024"
authors = ["le7.toille@gmail.com"]
description = "A high-performance MQTT broker written in Rust, powered by Rustls and Tokio."
license = "BUSL-1.1"

[dependencies]
tokio = { version = "1", features = ["full"] }
tokio-util = "0.7"
tokio-stream = "0.1"
futures-util = { version = "0.3", features = ["sink"] }
futures = "0.3"
coarsetime = "0.1"
tokio-tungstenite = { version = "0.28" }
dyn-clone = "1"
wasmtime = "37"
wasmtime-wasi = "37"

tracing = "0.1"
tracing-subscriber = "0.3"
tracing-appender = "0.2"

rustls = "0.23"
rustls-pemfile = "2"
tokio-rustls = "0.26"

anyhow = "1"
thiserror = "2"
async-trait = "0.1"
bytes = "1"
byteorder = "1"
toml = "0.9"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1"
base64 = "0.22"
http = "1.0"
clap = { version = "4", features = ["derive"] }
uuid = { version = "1", features = ["v4"] }
reqwest = "0.12"
minijinja = { version = "2.12" }
chrono = "0.4"


tonic = "*"
prost = "0.13"
rand = "0.9.2"

[build-dependencies]
tonic-prost-build = "0.14"

[profile.release]
opt-level = "z"   # Optimize for size.
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduce number of codegen units to increase optimizations.
panic = "abort"   # Abort on panic
strip = true      # Automatically strip symbols from the binary.

[package.metadata.deb]
maintainer = "le.toille <le7.toille@gmail.com>"
copyright = "2025, le.toille <le7.toille@gmail.com>"
license-file = ["LICENSE", "0"]
extended-description = """A high-performance MQTT broker."""
revision = "1"
assets = [
    [
        "target/release/axonmq",
        "usr/bin/",
        "755",
    ],
    [
        "config.toml",
        "etc/axonmq/",
        "644",
    ],
    [
        "LICENSE",
        "etc/axonmq/",
        "644",
    ],
    [
        "certs/server.crt",
        "etc/axonmq/certs/",
        "644",
    ],
    [
        "certs/server.key",
        "etc/axonmq/certs/",
        "644",
    ],
    [
        ".github/package/axonmq.service",
        "lib/systemd/system/",
        "644",
    ],
    [
        "wasm/example.wasm",
        "etc/axonmq/wasm/",
        "644",
    ],
]
maintainer-scripts = ".github/package/"
conf-files = [
    "/etc/axonmq/config.toml",
    "/etc/axonmq/certs/server.crt",
    "/etc/axonmq/certs/server.key",
]

[package.metadata.generate-rpm]
assets = [
    { source = "target/release/axonmq", dest = "/usr/bin/axonmq", mode = "755" },
    { source = "LICENSE", dest = "/etc/axonmq/LICENSE", mode = "644" },
    { source = "config.toml", dest = "/etc/axonmq/config.toml", mode = "644", config = true },
    { source = "certs/server.crt", dest = "/etc/axonmq/certs/server.crt", mode = "644", config = true },
    { source = "certs/server.key", dest = "/etc/axonmq/certs/server.key", mode = "644", config = true },
    { source = ".github/package/axonmq.service", dest = "/usr/lib/systemd/system/axonmq.service", mode = "644" },
    { source = "wasm/example.wasm", dest = "/etc/axonmq/wasm/example.wasm", mode = "644" },
]
post_install_script = """
1 #!/bin/sh
set -e

if ! getent group axonmq >/dev/null; then
    addgroup --system axonmq
fi
if ! getent passwd axonmq >/dev/null; then
    adduser --system --ingroup axonmq --no-create-home --shell /bin/false axonmq
fi

mkdir -p /var/lib/axonmq
chown -R axonmq:axonmq /var/lib/axonmq

mkdir -p /var/log/axonmq
chown -R axonmq:axonmq /var/log/axonmq

systemctl daemon-reload
systemctl enable axonmq.service
systemctl start axonmq.service

exit 0
"""
pre_uninstall_script = """
#!/bin/sh

systemctl disable axonmq
systemctl stop axonmq
"""
